name: PHPUnit
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

jobs:
  phpunit:
    name: PHPUnit with PHP ${{ matrix.php-versions }} & Symfony ${{ matrix.symfony-versions }} - ${{ matrix.composer-dependencies }} dependencies - ${{ matrix.os }} OS
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4', '8.0']
        symfony-versions: ['5.3.*', '5.4.x@dev']
        composer-dependencies: ['highest', 'lowest']
        os: ['ubuntu-latest']
        include:
          - php-versions: '8.0'
            symfony-versions: '6.0.x@dev'
    env:
      SYMFONY_REQUIRE: ${{ matrix.symfony-versions }}
    services:
      redis:
        image: redis:6.0.0
        ports:
          - 6379:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: zip, redis, pcntl
        env:
          update: true

      - name: Install Symfony Flex
        run: composer global require --no-progress --no-scripts --no-plugins symfony/flex

      - name: Set composer minimum stability
        run: composer config minimum-stability dev
        if: matrix.symfony-versions == '5.4.x@dev' || matrix.symfony-versions == '6.0.x@dev'

      - name: Remove not compatible vendors
        run: composer remove --no-update --dev friendsofphp/php-cs-fixer
        if: matrix.symfony-versions == '6.0.x@dev'

      - name: Install Composer dependencies
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: ${{ matrix.composer-dependencies }}
          composer-options: "--prefer-stable"

      - name: Run PHPUnit
        run: php vendor/bin/phpunit tests -v
        env:
          SCHEDULER_REDIS_DSN: 'redis://127.0.0.1:6379/_symfony_scheduler_tasks'

      - name: Cache PHPUnit result
        uses: actions/cache@v2
        with:
          path: ~/.phpunit.result.cache
          key: ${{ runner.os }}-composer-${{ matrix.php-versions }}-${{ matrix.composer-dependencies }}-${{ hashFiles('**/.phpunit.result.cache') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php-versions }}-${{ matrix.composer-dependencies }}-
